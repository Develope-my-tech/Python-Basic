'''twisted는 비동기식 이벤트 기반 네트워킹 프레임워크데이터를 받거나 커넥션을 닫는 것과 같이 이벤트와 함수를 연결콜백으로 디자인되어있다.'''# 서버측 Knock_serverfrom twisted.internet import protocol, reactorclass Knock(protocol.Protocol):    def dataReceived(self, data):        print("Client:", data)        if data.startswith("Knock Knock"):            reponse = "Who's there?"        else:            response = data + " who?"        print("Server: ", response)        self.transport.write(reponse)class KnockFactory(protocol.Factory):    def buildProtocol(self, addr):        return Knock()reactor.listenTCP(8000, KnockFactory())reactor.run()